---
# tasks file for omero-server

- include: ansible-prerequisites.yml

# Include this first so that the omero system user gets created with the
# correct home directory skeleton since if the home directory already exists
# it won't be modified
- include: omero-user.yml

- include: omego.yml

- name: omero | is server symlink present
  become: yes
  stat:
    path: "{{ omero_serverdir }}/{{ omero_server_symlink }}"
  register: omero_server_symlink_st

# OMERO data directory: If it already exists assume the permissions are
# correct, don't touch anything

- name: Check omero data directory
  become: yes
  stat:
    path: "{{ omero_datadir }}"
  register: stdd

- name: omero | create omero data directory
  become: yes
  file:
    owner: "{{ omero_system_user }}"
    path: "{{ omero_datadir }}"
    state: directory
  when: omero_datadir_create and not stdd.stat.exists

- name: omero | override omero data owner
  become: yes
  file:
    owner: "{{ omero_system_user }}"
    path: "{{ omero_datadir }}"
    recurse: yes
    state: directory
  when: omero_datadir_chown


# OMERO.server

# TODO: omero_reinstall_on_error
- fail:
    msg: "omero_reinstall_on_error not implemented"
  when: omero_reinstall_on_error | default(False)

# This should be safe to always run including in check-mode
- name: omero | get server version
  become: yes
  become_user: "{{ omero_system_user }}"
  command: "{{ omero_serverdir }}/{{ omero_server_symlink }}/bin/omero version"
  register: omero_server_version
  when: omero_server_symlink_st.stat.exists
  changed_when: False
  always_run: yes
  # Set a custom error message
  ignore_errors: yes

- fail:
    msg: "OMERO.server found but unable to get version, you may have a corrupt installation"
  when: omero_server_symlink_st.stat.exists and omero_server_version is undefined

- name: omero | create common configuration file
  become: yes
  template:
    dest: "{{ omero_basedir }}/config/omero-base.config"
    force: yes
    src: omero-base.config.j2

- name: omero | empty additional configuration file
  become: yes
  copy:
    content: ""
    dest: "{{ omero_basedir }}/config/omero-additional.config"
    force: yes
  when: omero_prestart_file | default(None) == None

- name: omero | copy additional configuration file
  become: yes
  copy:
    dest: "{{ omero_basedir }}/config/omero-additional.config"
    force: yes
    src: "{{ omero_prestart_file }}"
  when: omero_prestart_file | default(None) != None

- name: omero | set omego options
  set_fact:
    omero_omego_options: >
      --release {{ omero_release }}
      --sym {{ omero_server_symlink }}
      --prestartfile {{ omero_basedir }}/config/omero-base.config
      --prestartfile {{ omero_basedir }}/config/omero-additional.config
      --ice {{ ice_version }}
      {{ omero_omego_verbosity }}
      {{ omero_omego_additional_args }}
      {{ omero_systemd_setup | ternary('--no-start', '') }}
# If systemd is enabled don't start anything, leave systemd to handle this
# later omego will still stop omero and omero-web outside of systemd, so you
# should ensure the service file contains `Restart=no` (default)

# TODO: If server was started by systemd but stopped directly you may end up
# with a hanging process

- name: omero | set omego db options
  set_fact:
    omero_omego_db_options: >
      --dbhost {{ omero_dbhost | quote }}
      --dbuser {{ omero_dbuser | quote }}
      --dbname {{ omero_dbname | quote }}
      --dbpass {{ omero_dbpassword | quote  }}

- name: omero | install omero
  become: yes
  become_user: "{{ omero_system_user }}"
  command: >
    {{ omero_omego_path }}
    install
    {{ omero_omego_options }}
    {{ omero_omego_db_options }}
    --rootpass {{ omero_rootpassword | quote }}
    --initdb
  args:
    chdir: "{{ omero_serverdir }}"
    creates: "{{ omero_serverdir }}/{{ omero_server_symlink }}"

# TODO: Check whether an upgrade is available since `omego upgrade` always
# restarts the server. It should be possible to use `omero admin checkupgrade`
# to check, but due to the incomplete registry work it doesn't currently work.
# For now just compare the current and requested version

- name: omero | checkupgrade
  set_fact:
    omero_update_needed: True
  when: omero_server_symlink_st.stat.exists and (omero_server_version.stdout | regex_replace('^([^-]+).*', '\\1')) != omero_release
  ignore_errors: yes

- name: omero | checkupgrade
  set_fact:
    omero_update_needed: False
  when: omero_update_needed is not defined

- debug:
    msg: "Upgrade needed: {{ omero_server_version.stdout | regex_replace('^([^-]+).*', '\\1') }} -> {{ omero_release }}"
  when: omero_update_needed

# Backup database

- name: omero | create omero backup directory
  become: yes
  file:
    mode: 0700
    owner: "{{ omero_system_user }}"
    path: "{{ omero_database_backupdir }}"
    state: directory
  when: (omero_database_backupdir | default(None)) and omero_upgrade and omero_update_needed

- name: omero | backup database
  become: yes
  become_user: "{{ omero_system_user }}"
  command: >
    {{ omero_omego_path }}
    db dump
    {{ omero_omego_db_options }}
    --serverdir {{ omero_serverdir }}/{{ omero_server_symlink }}
  args:
    chdir: "{{ omero_database_backupdir }}"
  when: (omero_database_backupdir | default(None)) and omero_upgrade and omero_update_needed

# Upgrade

- name: omero | upgrade
  become: yes
  become_user: "{{ omero_system_user }}"
  command: >
    {{ omero_omego_path }}
    upgrade
    {{ omero_omego_options }}
    {{ omero_omego_db_options }}
    --upgradedb
  args:
    chdir: "{{ omero_serverdir }}"
  when: omero_upgrade and omero_update_needed

- include: omero-web.yml
  when: omero_web_install

- include: omero-systemd.yml
  when: omero_systemd_setup
